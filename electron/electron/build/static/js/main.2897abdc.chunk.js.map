{"version":3,"sources":["MenuFooter.js","ChatsPage.js","MessagesPage.js","LoginPage.js","LoginVerificationPage.js","SettingsPage.js","NewChatPage.js","NewContactPage.js","App.js","serviceWorker.js","index.js"],"names":["MenuFooter","react_default","a","createElement","className","Link","to","document","body","classList","toggle","remove","Component","ChatsPage","state","loaded","connectedUsers","this","map","user","name","attributes","email","console","log","key","id","concat","src_MenuFooter_0","window","controller","notLoggedIn","props","history","push","getConnectedUsers","setState","MessagesPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","connectedUser","value","userMessages","handleChange","bind","assertThisInitialized","handleSubmit","handleNewMessage","apiCallbacks","newMessage","event","target","getMessages","sendMessage","match","params","preventDefault","message","index","decryptedBody","data","onSubmit","onChange","placeholder","type","connectedUserId","getUserById","LoginPage","sendVerificationCode","sendCodeResp","query","searchString","qs","pathname","search","action","method","required","LoginVerificationPage","code","errorMessage","login","loginResp","error","verification","location","reload","role","disabled","onClick","queryParams","ignoreQueryPrefix","SettingsPage","NewChatPage","results","length","connectedUsersSearch","users","NewContactPage","createNewInvitation","resp","payload","App","HashRouter","Route","exact","path","component","Boolean","hostname","ReactDOM","render","src_App_0","applicationState","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2897abdc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './MenuFooter.css';\nimport { Link } from 'react-router-dom'\n\nclass MenuFooter extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <div className=\"container-fluid\">\n          <nav className=\"navbar\">\n            <ul className=\"navbarContainer\">\n              <li><Link to={\"/\"}>Chats</Link></li>\n              <li><Link to={\"/settings\"}>Settings</Link></li>\n            </ul>\n          </nav>\n        </div>\n      </footer>\n    );\n  }\n\n  componentDidMount(){\n    document.body.classList.toggle('withFooter', true)\n  }\n\n  componentWillUnmount(){\n    document.body.classList.remove('withFooter')\n  }\n}\n\nexport default MenuFooter;\n","import './ChatsPage.css';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport MenuFooter from './MenuFooter';\n\nclass ChatsPage extends Component {\n  state = { loaded: false, connectedUsers: []};\n  render() {\n    return (\n      <div className=\"ChatsPage\">\n          <div className=\"chatsMenu\">\n          <ul>\n            <li className=\"pull-right\"><Link to=\"/new_chat\">New</Link></li>\n          </ul>\n        </div>\n        <div className=\"container\">\n          <h1>Chats</h1>\n          <ul>\n          {\n            this.state.connectedUsers.map((user) => {\n              let name = user.attributes.name;\n\n              if (user.attributes.name === null) {\n                name = user.attributes.email;\n              }\n\n              console.log(user.attributes);\n              return(<li key={user.id}><Link to={`/connections/${user.id}/messages`}>{name}</Link></li>)\n            })\n          }\n          </ul>\n        </div>\n        <MenuFooter/>\n      </div>\n    );\n  }\n\n  async componentDidMount(){\n    if (await window.controller.notLoggedIn()) {\n      console.log(\"Redirecting to login page\");\n      this.props.history.push(`/login`)\n    }\n\n    const connectedUsers = await window.controller.getConnectedUsers();\n    this.setState({connectedUsers: connectedUsers, loaded: true});\n  }\n}\n\nexport default ChatsPage;\n","import React, { Component } from 'react';\nimport './MessagesPage.css'; import { Link } from 'react-router-dom'\n\nclass MessagesPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {connectedUser: null, loaded: false, value: ``, userMessages: []}\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n\n    window.apiCallbacks.newMessage = this.handleNewMessage;\n  }\n\n  async handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  async handleNewMessage() {\n    let userMessages = await window.controller.getMessages(this.state.connectedUser.id);\n    this.setState({userMessages: userMessages});\n  }\n\n  async handleSubmit(event) {\n    window.controller.sendMessage(this.state.value, this.props.match.params.id);\n    this.setState({value: \"\"});\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <Link to={`/`}>{\"< Back\"}</Link>\n        <h2>Messages {this.state.connectedUser === null ? `` : `- ${this.state.connectedUser.attributes.name}`}</h2>\n        <div>\n          {this.state.userMessages.map((message, index) => (<p key={message.id}>{message.attributes.decryptedBody.data}</p>))}\n        </div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <textarea value={this.state.value} onChange={this.handleChange} placeholder=\"Write a message...\" />\n          </label>\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" />\n        </form>\n      </div>\n    );\n  }\n\n  async componentDidMount() {\n    let connectedUserId = this.props.match.params.id\n    let connectedUser = await window.controller.getUserById(connectedUserId);\n    let userMessages = await window.controller.getMessages(connectedUserId);\n    this.setState({connectedUser: connectedUser, loaded: true, userMessages: userMessages});\n  }\n}\n\nexport default MessagesPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport * as qs from 'qs';\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {email: \"\"}\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleChange(event) {\n    this.setState({email: event.target.value})\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"Submit\");\n    let sendCodeResp = await window.controller.sendVerificationCode(this.state.email);\n    console.log(sendCodeResp);\n    let query = {email: this.state.email};\n    const searchString = qs.stringify(query);\n\n    this.props.history.push({pathname: `/login_verification`, search: searchString})\n  }\n\n  render() {\n    return (\n      <div>\n        <Link to={`/settings`}>{\"< Back\"}</Link>\n        <h2>Login Page</h2>\n        <form action=\"/#/login_verification\" method=\"get\" onSubmit={this.handleSubmit}>\n          <label><b>Email</b></label>\n          <input type=\"text\" placeholder=\"Email\" name=\"email\" onChange={this.handleChange} required/>\n          <br/>\n          <br/>\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n\n  async componentDidMount(){\n    if (!await window.controller.notLoggedIn()) {\n      console.log(\"Redirecting to chats\");\n      this.props.history.push(`/`)\n    }\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as qs from 'qs';\n\nclass LoginVerificationPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {email: \"\", code: \"\", errorMessage: \"\"}\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.sendVerificationCode = this.sendVerificationCode.bind(this);\n  }\n\n  async handleChange(event) {\n    if (event.target.name === \"code\") {\n      this.setState({code: event.target.value})\n    }\n  }\n\n  async sendVerificationCode(event) {\n    let sendCodeResp = await window.controller.sendVerificationCode(this.state.email);\n    console.log(sendCodeResp);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    let loginResp = await window.controller.login(this.state.email, this.state.code);\n\n    if (loginResp.error) {\n      this.setState({errorMessage: loginResp.error.message});\n    } else {\n      this.setState({verification: \"\"});\n      console.log(\"Reloading page\");\n      window.location.reload();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Link to={`/login`}>{\"< Back\"}</Link>\n        <h2>Verification Page</h2>\n        {(this.state.errorMessage !== \"\") &&\n            <div className=\"alert alert-warning\" role=\"alert\">\n              {this.state.errorMessage}\n            </div>\n        }\n        <form onSubmit={this.handleSubmit}>\n          <label><b>Email</b></label>\n          <input type=\"text\" name=\"email\" value={this.state.email} disabled/>\n          <br/>\n          <label><b>Verification Code</b></label>\n          <input type=\"text\" placeholder=\"Enter Code\" name=\"code\" onChange={this.handleChange} required/>\n          <br/>\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit\" />\n        </form>\n        <br/>\n        <button onClick={this.sendVerificationCode} className=\"btn btn-info\">Resend Code</button>\n      </div>\n    );\n  }\n\n  async componentDidMount(){\n    let queryParams = qs.parse(this.props.location.search, { ignoreQueryPrefix: true });\n    this.setState({email: queryParams.email});\n\n    if (!await window.controller.notLoggedIn()) {\n      console.log(\"Redirecting to chats\");\n      this.props.history.push(`/`)\n    }\n  }\n}\n\nexport default LoginVerificationPage;\n","import './SettingsPage.css';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport MenuFooter from './MenuFooter';\n\nclass SettingsPage extends Component {\n  render() {\n    return (\n      <div className=\"SettingsPage\">\n        <div className=\"container\">\n          <h1>Settings</h1>\n          <Link to=\"/login\">Login</Link>\n        </div>\n        <MenuFooter/>\n      </div>\n    );\n  }\n}\n\nexport default SettingsPage;\n","import './NewChatPage.css';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass NewChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {search: \"\", results: []}\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleChange(event) {\n    let searchString = event.target.value;\n    this.setState({search: searchString});\n    if (searchString.length > 3) {\n      let users = await window.controller.connectedUsersSearch(searchString);\n      this.setState({results: users});\n    } else {\n      let users = [];\n      this.setState({results: users});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"newChatPage\">\n        <Link to={`/`}>{\"< Back\"}</Link>\n        <h1>New Chat</h1>\n\n        <div>\n          <Link to={`/new_contact`}>{\"+ New Contact\"}</Link>\n        </div>\n        <br/>\n\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" placeholder=\"Search\" name=\"email\" onChange={this.handleChange} required/>\n        </form>\n\n        <ul>\n        {\n          this.state.results.map((user) => {\n            return(<li key={user.id}><Link to={`/connections/${user.id}/messages`}>{user.attributes.name}</Link></li>)\n          })\n        }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default NewChatPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass NewContactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {email: \"\", name: \"\"}\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleChange(event) {\n    if(event.target.name === \"name\") {\n      this.setState({name: event.target.value})\n    } else if (event.target.name === \"email\") {\n      this.setState({email: event.target.value})\n    }\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    let resp = await window.controller.createNewInvitation(this.state.name, this.state.email);\n\n    if(resp.payload && resp.payload.data) {\n      this.props.history.push(`/new_chat`)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"newContactPage\">\n        <Link to={`/new_chat`}>{\"< Back\"}</Link>\n        <h1>New Contact</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <input type=\"text\" placeholder=\"Full name\" name=\"name\" onChange={this.handleChange} required/>\n          </div>\n\n          <div className=\"form-group\">\n            <input type=\"email\" placeholder=\"email\" name=\"email\" onChange={this.handleChange} required/>\n          </div>\n\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewContactPage;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ChatsPage from './ChatsPage';\nimport MessagesPage from './MessagesPage';\nimport LoginPage from './LoginPage';\nimport LoginVerificationPage from './LoginVerificationPage';\nimport SettingsPage from './SettingsPage';\nimport NewChatPage from './NewChatPage';\nimport NewContactPage from './NewContactPage';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router className=\"App\">\n        <div>\n          <Route exact path=\"/\" component={ChatsPage} />\n          <Route path=\"/connections/:id/messages\" component={MessagesPage} />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/login_verification\" component={LoginVerificationPage} />\n          <Route path=\"/settings\" component={SettingsPage} />\n          <Route path=\"/new_chat\" component={NewChatPage} />\n          <Route path=\"/new_contact\" component={NewContactPage} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App applicationState={window.applicationState} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}